#! /usr/bin/python3
from threading import Thread, Semaphore
import cv2, time

semaphore = Semaphore(2)
queue1 = []
queue2 = []

class ExtractFrames(Thread):
    def __init__(self):
        Thread.__init__(self)
        self.videoCapture = cv2.VideoCapture('clip.mp4')
        self.count = 0
        
    def run(self):
        global queue1
        success, image = self.videoCapture.read()

        print(f'Reading frame {self.count} {success}')
        while success and self.count < 72:
            semaphore.acquire()
            queue1.append(image)
            semaphore.release()

            success, image = self.videoCapture.read()
            print(f'Reading frame {self.count}')
            self.count += 1
            
class ConvertToGrayScale(Thread):
        def __init__(self):
            Thread.__init__(self)
            self.count = 0
            
        def run(self):
            global queue1
            global queue2

            while len(queue1) < 10:
                pass
            semaphore.acquire()
            frame = queue1.pop(0)
            semaphore.release()

            while frame is not None and self.count < 72:
                print(f'Converting frame {self.count}')

                grayScaleFrame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
                semaphore.acquire()
                queue2.append(grayScaleFrame)
                semaphore.release()
                self.count += 1
                
                
test1 = ExtractFrames()
test1.start()
test2 = ConvertToGrayScale()
test2.start()
